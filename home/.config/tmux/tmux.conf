#For debug unbind all keys and use only defined here
#unbind-key -a

source ~/.config/tmux/tmux_powerline.conf

#https://deductivelabs.com/en/using-true-color-vim-tmux/
set -g default-terminal "screen-256color"
set -g default-shell /bin/zsh

#Start Window Numbering at 1
set -g base-index 1
set -g pane-base-index 1

# Friendly url list from current buffer
bind-key u capture-pane \; save-buffer /tmp/tmux-buffer \; new-window -n "urlview" '$SHELL -c "urlview < /tmp/tmux-buffer"'

# Reload configuration
unbind R # only sources
bind R source-file ~/.config/tmux/tmux.conf \; display-message " ✱ tmux.conf is reloaded"
bind r source-file ~/.config/tmux/tmux.conf \; display-message " ✱ tmux.conf is reloaded"

set -g history-file ~/.config/tmux/tmux_history

# Kill pane/window/session shortcuts
#unbind K
#unbind Q
bind x confirm-before  "kill-pane"
bind X kill-pane
bind K confirm-before "kill-window"
bind Q confirm-before "kill-session"

# Window titles
set -g set-titles on
set -g set-titles-string "Tmux session #S @ #T"

#Morantron/tmux-fingers
set -g @fingers-compact-hints "0"

#NHDaly/tmux-better-mouse-mode
set -g @emulate-scroll-for-no-mouse-alternate-buffer "on"
set -g @scroll-without-changing-pane "on"

#tmux-plugins/tmux-yank
set -g @yank_selection 'clipboard'

# Truecolor 24bit support
set-option -ga terminal-overrides ",screen-256color:Tc"

set-option -g mouse on

set -g mode-keys vi

# utf8 is on
#set -g utf8 on
#set -g status-utf8 on

#TODO:
color_dark="colour233"
color_window_off_indicator="colour089"
color_window_off_status_bg="colour239"
color_window_off_status_current_bg="colour255"
color_status_text="colour246"
bind -T root F12  \
  set prefix None \;\
  set key-table off \;\
  set status-style "fg=$color_status_text,bg=$color_window_off_status_bg" \;\
  set window-status-current-format "#[fg=$color_window_off_status_bg,bg=$color_window_off_status_current_bg]$separator_powerline_right#[default] #I:#W# #[fg=$color_window_off_status_current_bg,bg=$color_window_off_status_bg]$separator_powerline_right#[default]" \;\
  set window-status-current-style "fg=$color_dark,bold,bg=$color_window_off_status_current_bg" \;\
  if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
  refresh-client -S \;\

bind -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-style \;\
  set -u window-status-current-style \;\
  set -u window-status-current-format \;\
  refresh-client -S
  
nested_indicator="#[fg=color231,bold,bg=color04]#([ $(tmux show-option -qv key-table) = 'off' ] && echo 'Nested <F12>' || echo 'Nest <F12>' )#[default]"

set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr 'fg=color231,bg=color04' # default is 'fg=default,bg=yellow'

set -g status-right "#{prefix_highlight} $nested_indicator #{?pane_synchronized, #[bg=blue]SYNCHRONIZED#[default],} "
#set -g status-right "$nested_indicator #[fg=cyan,bold] #U@#H #[default]#[fg=blue]#(tmux display-message -p '#{pane_current_path}' | sed 's#$HOME#~#g') "
set -g status-right-length 65

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -sg escape-time 10

# increase scrollback buffer size
set -g history-limit 50000

# tmux messages are displayed for 4 seconds
set -g display-time 6000

# focus events enabled for terminals that support them
set -g focus-events on

# Don't close window after cmd ends
#set -g remain-on-exit on


#By default, all windows in a session are constrained to the size of the smallest client connected to that session, even if both clients are looking at different windows
set-window-option -g aggressive-resize on

#new  -d -s std -n task -x 160 -y 200 '/usr/bin/zsh -i -c "task calendar ; /usr/bin/zsh"'
#neww -d -n mcabber 'mcabber'
#neww -d -n serb 'lftp -e connect serb'
#neww -n su 'su -'

# List of plugins
# Supports `github_username/repo` or full git repo URLs
set -g @tpm_plugins '              \
  tmux-plugins/tpm                 \
  tmux-plugins/tmux-sensible       \
  soyuka/tmux-current-pane-hostname\
  nhdaly/tmux-better-mouse-mode    \
  tmux-plugins/tmux-open	   \
  tmux-plugins/tmux-resurrect      \
  tmux-plugins/tmux-prefix-highlight \
'
# other ^A
unbind ^A
bind C-a last-window

# Set the prefix to ^A.
unbind C-b
set -g prefix ^A
bind a send-prefix

# screen ^C c 
unbind ^C
bind ^C new-window
unbind c
bind c new-window

# detach ^D d
unbind ^D
bind ^D detach

# displays * 
unbind *
bind * list-clients

# next ^@ ^N sp n 
unbind ^@
bind ^@ next-window
unbind ^N
bind ^N next-window
unbind " "
bind " " next-window

# title A
unbind A
bind A command-prompt "rename-window %%"

# Rename window FORMAT: command | '+' if > 1 pane | '=' if pane synchronized
set-window-option -g automatic-rename-format "#{pane_current_command} #{?#{>:#{window_panes},1},+,}#{?pane_synchronized,=,}"

unbind BSpace
bind BSpace previous-window

# windows ^W w 
unbind ^W
bind ^W list-windows
unbind w
bind w list-windows

# redisplay ^L l 
unbind ^L
bind ^L refresh-client
unbind l
bind l refresh-client

# split horizontal | split full horizontal
unbind '|'
bind '|' split-window -h -c "#{pane_current_path}"
unbind '\'
bind '\' split-window -fh -c "#{pane_current_path}"

# split vertical | split full vertical
unbind '-'
bind '-' split-window -v -c "#{pane_current_path}"
unbind '_'
bind '_' split-window -fv -c "#{pane_current_path}"

#Sync panes
bind = set-window-option synchronize-panes
bind-key + run-shell "~/bin/tmux_insert_pane_number.sh"

#bind-key -T root C-h   select-pane -L #TODO: breaks emacs clear
bind-key C-h select-pane -L
bind-key C-j select-pane -D
bind-key C-k select-pane -U
bind-key C-l select-pane -R
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# :kB: focus up
unbind Tab
bind -T root C-Tab select-pane -t:.+
unbind BTab
bind -T root BTab select-pane -t:.-
bind '!' select-pane -t:.1
bind '@' select-pane -t:.2
bind '#' select-pane -t:.3
bind '$' select-pane -t:.4
bind '%' select-pane -t:.5
bind '^' select-pane -t:.6
bind '&' select-pane -t:.7
bind '*' select-pane -t:.8
bind '(' select-pane -t:.9
bind ')' select-pane -t:.10

# " windowlist -b
unbind '"'
bind '"' choose-window

# Ctrl+PgUP - enter copy mode + PgUP
unbind C-PgUp
bind-key -n C-Pgup copy-mode -u
bind-key -T copy-mode-vi C-NPage  send-keys -X page-down
#doesnt work...
#unbind C-PgDown
#bind-key -T copy-mode-vi C-PgDown  send-keys -X page-down

# Ctrl+f
unbind-key -T copy-mode-vi C-f
bind-key   -T root         C-f command-prompt -p "(search up)" "copy-mode; send -X search-backward \"%%%\""

#word-separator for select-word
#set-option -g word-separators ' ()"@:'
set-option -g word-separators ' ()"'

## Clipboard integration (only applicable when you have an X server running)
# Selection with mouse should copy to primary right away, in addition to the default action.
# Double LMB Select & Copy (Word)
bind-key -n DoubleClick1Pane \
    select-pane \; \
    copy-mode -M \; \
    send-keys -X select-word \; \
    run-shell "usleep 100000" \; \
    send-keys -X copy-pipe-and-cancel "xclip -in -sel primary > /dev/null" \; 

#Double RMB Select & Copy (Word) & stay in buffer mode; you can 'y'ank and/or modify selection; paste with ctrl-v
bind-key -n DoubleClick3Pane  \
    select-pane \; \
    copy-mode -M \; \
    send-keys -X select-word \; \
    send-keys -X copy-pipe-no-clear "xclip -in -sel clipboard > /dev/null" \; 

# Triple LMB Select & Copy (Line)
bind-key -n TripleClick1Pane \
    select-pane \; \
    copy-mode -M \; \
    send-keys -X select-line \; \
    send-keys -X copy-pipe-and-cancel "tr -d '✘' | xclip -in -sel primary > /dev/null" \; 

#Triple RMB Select & Copy (Line) & stay in buffer mode; you can 'y'ank and/or modify selection; paste with ctrl-v
bind-key -n TripleClick3Pane \
    select-pane \; \
    copy-mode -M\; \
    send-keys -X select-line \; \
    send-keys -X copy-pipe-no-clear "tr -d '✘' | xclip -in -sel clipboard > /dev/null" \; 

# Copy/Yank with 'y' and Enter
unbind-key -T copy-mode-vi y 
unbind-key -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "tr -d '✘●' | xclip -in -sel clipboard > /dev/null" 
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "tr -d '✘●' | xclip -in -sel clipboard > /dev/null" 

# Unbind RightMouseButton - Menu
unbind-key -n MouseDown3Pane

# Select/Drag with LMB & Copy 
unbind -T copy-mode-vi MouseDragEnd1Pane
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "tr -d '✘●' | xclip -in -sel clipboard > /dev/null"

# Select/Drag with RMB & stay in buffer mode
bind -T root MouseDrag3Pane  "send-keys -M; copy-mode -M; send-keys -X begin-selection"

# Middle click to paste from the primary
unbind-key MouseDown2Pane
bind-key -n MouseDown2Pane run "tmux set-buffer \"$(xclip -o -sel primary)\"; tmux paste-buffer"

# Middle click on the window label to kill it
# "=" is apparently a macro for the "selected window number" but only for 
# a certain set of commands.
bind-key -n MouseUp2Status kill-window -t=
# Drag to re-order windows
bind-key -n MouseDrag1Status swap-window -t=
# Double click on the window list to open a new window
bind-key -n DoubleClick1Status new-window

#TODO: Import OS-specific config
#if-shell 'test "$(uname -s)" = Darwin' 'source-file ~/.tmux-osx.conf'
#TODO: test for various tmux version
run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6-)"
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.4" | bc)" = 1 ]' \
  " bind-key -t vi-copy v begin-selection; \
  bind-key p paste-buffer; \
  bind-key -t vi-copy V select-line; \
  bind-key -t vi-copy r rectangle-toggle; "
#  bind -t vi-copy y copy-pipe 'xclip -in -selection clipboard'"
#
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' \
  "bind-key -T copy-mode-vi 'v' send -X begin-selection; \
  bind-key -T copy-mode-vi 'V' send -X select-line; \
  bind-key -T copy-mode-vi 'r' send -X rectangle-toggle;"

bind-key p paste-buffer

#TODO
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1
# Scrolling left to terminal
#set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# Allow home/end in vi copy mode
bind-key -T copy-mode-vi Home send-keys -X start-of-line
bind-key -T copy-mode-vi End send-keys -X end-of-line

# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.
set-environment -g TMUX_PLUGIN_MANAGER_PATH "~/.config/tmux/plugins/"
run -b '~/.config/tmux/plugins/tpm/tpm'
