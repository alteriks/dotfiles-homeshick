#run-shell "powerline-daemon -q"
#source /usr/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf
##source /usr/lib/python2.7/site-packages/powerline/bindings/tmux/powerline_tmux_1.9_plus.conf
#source ~/.tmux_airline.conf
#source ~/.tmux_zenburn.conf
source ~/.tmux_solarized.conf

#
#TODO
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1
# Scrolling left to terminal
#set -g terminal-overrides 'xterm*:smcup@:rmcup@'
#

set -g default-terminal "screen-256color"
set -g default-shell /bin/zsh

#Start Window Numbering at 1
set -g base-index 1
set -g pane-base-index 1

# Friendly url list from current buffer
bind-key u capture-pane \; save-buffer /tmp/tmux-buffer \; new-window -n "urlview" '$SHELL -c "urlview < /tmp/tmux-buffer"'

# Reload configuration
bind r source-file ~/.tmux.conf

# Window titles
set -g set-titles on
#set -g set-titles-string "#T"
set -g set-titles-string "#(tmux ls | awk -F: '{print $1}' | xargs | sed 's/\ / | /g')"


set -g mode-keys vi

# utf8 is on
#set -g utf8 on
#set -g status-utf8 on
set -g status-right '#[fg=cyan,bold] #U@#H #[default]#[fg=blue]#(tmux display-message -p "#{pane_current_path}" | sed "s#$HOME#~#g") #[fg=red]%H:%M %d-%b-%y#[default]'

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

# increase scrollback buffer size
set -g history-limit 50000

# tmux messages are displayed for 4 seconds
set -g display-time 4000

# focus events enabled for terminals that support them
set -g focus-events on

# Don't close window after cmd ends
set-remain-on-exit=on

#By default, all windows in a session are constrained to the size of the smallest client connected to that session, even if both clients are looking at different windows
set-window-option -g aggressive-resize on

#new  -d -s std -n task -x 160 -y 200 '/usr/bin/zsh -i -c "task calendar ; /usr/bin/zsh"'
#neww -d -n mcabber 'mcabber'
#neww -d -n serb 'lftp -e connect serb'
#neww -n su 'su -'



# $Id: screen-keys.conf,v 1.7 2010-07-31 11:39:13 nicm Exp $
#
# By Nicholas Marriott. Public domain.
#
# This configuration file binds many of the common GNU screen key bindings to
# appropriate tmux key bindings. Note that for some key bindings there is no
# tmux analogue and also that this set omits binding some commands available in
# tmux but not in screen.
#
# Note this is only a selection of key bindings and they are in addition to the
# normal tmux key bindings. This is intended as an example not as to be used
# as-is.


# List of plugins
# Supports `github_username/repo` or full git repo URLs
set -g @tpm_plugins '              \
  tmux-plugins/tpm                 \
  tmux-plugins/tmux-sensible       \
  #tmux-plugins/tmux-copycat	   \
  tmux-plugins/tmux-sidebar	   \
  soyuka/tmux-current-pane-hostname\
  nhdaly/tmux-better-mouse-mode    \
'

set -g @sidebar-tree-position 'right'
set -g @sidebar-tree-focus 'w'


# Other examples:
# github_username/plugin_name    \
# git@github.com/user/plugin     \
# git@bitbucket.com/user/plugin  \

# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.
run-shell '~/.tmux/plugins/tpm/tpm'

# other ^A
unbind ^A
bind C-a last-window

# Set the prefix to ^A.
unbind C-b
set -g prefix ^A
bind a send-prefix

# Bind appropriate commands similar to screen.
# lockscreen ^X x 
unbind ^X
bind ^X lock-server
unbind x
bind x lock-server

# screen ^C c 
unbind ^C
bind ^C new-window
unbind c
bind c new-window

# detach ^D d
unbind ^D
bind ^D detach

# displays * 
unbind *
bind * list-clients

# next ^@ ^N sp n 
unbind ^@
bind ^@ next-window
unbind ^N
bind ^N next-window
unbind " "
bind " " next-window
unbind n
bind n next-window

# title A
unbind A
bind A command-prompt "rename-window %%"


# prev ^H ^P p ^? 
unbind ^H
bind ^H previous-window
unbind ^P
bind ^P previous-window
unbind p
bind p previous-window
unbind BSpace
bind BSpace previous-window

# windows ^W w 
unbind ^W
bind ^W list-windows
unbind w
bind w list-windows

# quit \ 
unbind '\'
bind '\' confirm-before "kill-server"

# kill K k 
unbind K
bind K confirm-before "kill-window"
unbind k
bind k confirm-before "kill-window"

# redisplay ^L l 
unbind ^L
bind ^L refresh-client
unbind l
bind l refresh-client

# split -v |
unbind |
bind | split-window

# :kB: focus up
unbind Tab
bind Tab select-pane -t:.+
unbind BTab
bind BTab select-pane -t:.-

# " windowlist -b
unbind '"'
bind '"' choose-window

# Ctrl+PgUP - enter copy mode + PgUP
unbind C-Pgup
bind-key -n C-Pgup copy-mode -u
