source ~/.tmux_solarized.conf

#https://deductivelabs.com/en/using-true-color-vim-tmux/
set -g default-terminal "screen-256color"
set -g default-shell /bin/zsh

#Start Window Numbering at 1
set -g base-index 1
set -g pane-base-index 1

# Friendly url list from current buffer
bind-key u capture-pane \; save-buffer /tmp/tmux-buffer \; new-window -n "urlview" '$SHELL -c "urlview < /tmp/tmux-buffer"'

# Reload configuration
unbind R # only sources
bind R source-file ~/.tmux.conf \; display-message " ✱ tmux.conf is reloaded"
bind r source-file ~/.tmux.conf \; display-message " ✱ tmux.conf is reloaded"

# Window titles
set -g set-titles on
#set -g set-titles-string "#T"
set -g set-titles-string "#(tmux ls | awk -F: '{print $1}' | xargs | sed 's/\ / | /g')"

#Morantron/tmux-fingers
set -g @fingers-compact-hints "0"

#NHDaly/tmux-better-mouse-mode
set -g @emulate-scroll-for-no-mouse-alternate-buffer "on"
set -g @scroll-without-changing-pane "off"

#tmux-plugins/tmux-yank
set -g @yank_selection 'clipboard'

# Truecolor 24bit support
set-option -ga terminal-overrides ",screen-256color:Tc"

set-option -g mouse on

set -g mode-keys vi

# utf8 is on
#set -g utf8 on
#set -g status-utf8 on
set -g status-right '#[fg=cyan,bold] #U@#H #[default]#[fg=blue]#(tmux display-message -p "#{pane_current_path}" | sed "s#$HOME#~#g") #(cat ~/.thyme-tmux) #[fg=red]%H:%M %d-%b-%y#[default] '
set -g status-right-length 65

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

# increase scrollback buffer size
set -g history-limit 50000

# tmux messages are displayed for 4 seconds
set -g display-time 6000

# focus events enabled for terminals that support them
set -g focus-events on

# Don't close window after cmd ends
set-remain-on-exit=on

#By default, all windows in a session are constrained to the size of the smallest client connected to that session, even if both clients are looking at different windows
set-window-option -g aggressive-resize on

#new  -d -s std -n task -x 160 -y 200 '/usr/bin/zsh -i -c "task calendar ; /usr/bin/zsh"'
#neww -d -n mcabber 'mcabber'
#neww -d -n serb 'lftp -e connect serb'
#neww -n su 'su -'

# List of plugins
# Supports `github_username/repo` or full git repo URLs
set -g @tpm_plugins '              \
  tmux-plugins/tpm                 \
  tmux-plugins/tmux-sensible       \
  soyuka/tmux-current-pane-hostname\
  nhdaly/tmux-better-mouse-mode    \
  tmux-plugins/tmux-resurrect      \
  tmux-plugins/tmux-continuum	   \
  tmux-plugins/tmux-open	   \
  tmux-plugins/tmux-yank           \
  Morantron/tmux-fingers	   \
'


# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.
run-shell '~/.tmux/plugins/tpm/tpm'

# other ^A
unbind ^A
bind C-a last-window

# Set the prefix to ^A.
unbind C-b
set -g prefix ^A
bind a send-prefix

# Bind appropriate commands similar to screen.
# lockscreen ^X x 
unbind ^X
bind ^X lock-server
unbind x
bind x lock-server

# screen ^C c 
unbind ^C
bind ^C new-window
unbind c
bind c new-window

# detach ^D d
unbind ^D
bind ^D detach

# displays * 
unbind *
bind * list-clients

# next ^@ ^N sp n 
unbind ^@
bind ^@ next-window
unbind ^N
bind ^N next-window
unbind " "
bind " " next-window

# title A
unbind A
bind A command-prompt "rename-window %%"

unbind BSpace
bind BSpace previous-window

# windows ^W w 
unbind ^W
bind ^W list-windows
unbind w
bind w list-windows

# quit \ 
#unbind '\'
#bind '\' confirm-before "kill-server"

# kill K k 
unbind K
bind K confirm-before "kill-window"
unbind k
bind k confirm-before "kill-window"

# redisplay ^L l 
unbind ^L
bind ^L refresh-client
unbind l
bind l refresh-client

# split horizontal | split full horizontal
unbind '|'
bind '|' split-window -h -c "#{pane_current_path}"
unbind '\'
bind '\' split-window -fh -c "#{pane_current_path}"

# split vertical | split full vertical
unbind '-'
bind '-' split-window -v -c "#{pane_current_path}"
unbind '_'
bind '_' split-window -fv -c "#{pane_current_path}"

#Sync panes
bind = set-window-option synchronize-panes
bind-key + run-shell "~/bin/tmux_insert_pane_number.sh"

#bind-key -T root C-h   select-pane -L #TODO: breaks emacs clear
bind-key C-h select-pane -L
#bind-key -T root C-Left select-pane -L
#bind-key -T root C-j   select-pane -D
bind-key C-j select-pane -D
#bind-key -T root C-Down select-pane -D
#bind-key -T root C-k   select-pane -U #TODO: breaks emacs delete till eol
bind-key C-k select-pane -U
#bind-key -T root C-Up select-pane -U
#bind-key -T root C-l   select-pane -R
bind-key C-l select-pane -R
#bind-key -T root C-Right select-pane -R

# :kB: focus up
unbind Tab
bind -T root C-Tab select-pane -t:.+
unbind BTab
bind -T root BTab select-pane -t:.-
bind '!' select-pane -t:.1
bind '@' select-pane -t:.2
bind '#' select-pane -t:.3
bind '$' select-pane -t:.4
bind '%' select-pane -t:.5
bind '^' select-pane -t:.6
bind '&' select-pane -t:.7
bind '*' select-pane -t:.8
bind '(' select-pane -t:.9
bind ')' select-pane -t:.10

# " windowlist -b
unbind '"'
bind '"' choose-window

# Ctrl+PgUP - enter copy mode + PgUP
unbind C-PgUp
bind-key -n C-Pgup copy-mode -u
bind-key -T copy-mode-vi C-NPage  send-keys -X page-down
#doesnt work...
#unbind C-PgDown
#bind-key -T copy-mode-vi C-PgDown  send-keys -X page-down

# Ctrl+f
unbind-key -T copy-mode-vi C-f
#bind-key   -T copy-mode-vi C-f run-shell " tmux send-keys ?"
bind-key   -T copy-mode-vi C-f command-prompt -p "(search up)" "copy-mode; send -X search-backward \"%%%\""
bind-key   -T root         C-f command-prompt -p "(search up)" "copy-mode; send -X search-backward \"%%%\""

#word-separator for select-word
set-option -g word-separators ' ()"@:'

#BEGIN archlinux
## Clipboard integration (only applicable when you have an X server running)
# Selection with mouse should copy to primary right away, in addition to the default action.
# Double LMB Select & Copy (Word)
bind-key -T copy-mode-vi DoubleClick1Pane \
    select-pane \; \
    send-keys -X select-word \; \
    send-keys -X copy-pipe-and-cancel "xclip -in -sel primary > /dev/null"
bind-key -n DoubleClick1Pane \
    select-pane \; \
    copy-mode -M \; \
    send-keys -X select-word \; \
    send-keys -X copy-pipe-and-cancel "xclip -in -sel primary > /dev/null"

#Double RMB Select & Copy (Word) & stay in buffer mode
bind-key -T copy-mode-vi DoubleClick3Pane  \
    select-pane \; \
    send-keys -X select-word \; \
    send-keys -X copy-pipe "xclip -in -sel primary > /dev/null" \; \
    send-keys -X stop-selection
bind-key -n DoubleClick3Pane  \
    select-pane \; \
    copy-mode \; \
    send-keys -X select-word \; \
    send-keys -X copy-pipe "xclip -in -sel primary > /dev/null" \; \
    send-keys -X stop-selection

# Triple LMB Select & Copy (Line)
bind-key -T copy-mode-vi TripleClick1Pane \
    select-pane \; \
    send-keys -X select-line \; \
    send-keys -X copy-pipe-and-cancel "xclip -in -sel primary > /dev/null"
bind-key -n TripleClick1Pane \
    select-pane \; \
    copy-mode -M \; \
    send-keys -X select-line \; \
    send-keys -X copy-pipe-and-cancel "xclip -in -sel primary > /dev/null"

#Triple RMB Select & Copy (Line) & stay in buffer mode
bind-key -T copy-mode-vi TripleClick3Pane \
    select-pane \; \
    send-keys -X select-line \; \
    send-keys -X copy-pipe "xclip -in -sel primary > /dev/null" \; \
    send-keys -X stop-selection
bind-key -n TripleClick3Pane \
    select-pane \; \
    copy-mode \; \
    send-keys -X select-line \; \
    send-keys -X copy-pipe "xclip -in -sel primary > /dev/null" \; \
    send-keys -X stop-selection

# Select/Drag with LMB & Copy 
unbind -n -Tcopy-mode-vi MouseDragEnd1Pane
bind -T copy-mode-vi MouseDragEnd1Pane send -X copy-selection-and-cancel\; run "tmux save-buffer - | xclip -i -sel primary > /dev/null"

# Select/Drag with RMB & stay in buffer mode
bind -n MouseDrag3Pane     if-shell -F -t = "#{mouse_any_flag}" "if -Ft= \"#{pane_in_mode}\" \"copy-mode -M\" \"send-keys -M\"" "copy-mode -M"
bind -Tcopy-mode-vi MouseDragEnd3Pane send -X stop-selection

# Copy mode copy should also copy it to the primary as well.
unbind -Tcopy-mode-vi Enter
bind -Tcopy-mode-vi Enter send -X copy-selection-and-cancel\; run "tmux save-buffer - | xclip -i -sel primary > /dev/null"

# Middle click to paste from the primary
unbind-key MouseDown2Pane
bind-key -n MouseDown2Pane run "tmux set-buffer \"$(xclip -o -sel primary)\"; tmux paste-buffer"
#END archlinux


# Middle click on the window label to kill it
# "=" is apparently a macro for the "selected window number" but only for 
# a certain set of commands.
bind-key -n MouseUp2Status kill-window -t=
# Drag to re-order windows
bind-key -n MouseDrag1Status swap-window -t=
# Double click on the window list to open a new window
bind-key -n DoubleClick1Status new-window


#TODO:
# ------------------------------------------------------------------------------
#                                                                *startify-faq-09*
# tmux-resurrect?~
# 
# If you use tmux-resurrect to restore your tmux environment, you can use :SLoad
# to load your last used session right away:
# >
#     set -g @resurrect-processes '"vim->vim +SLoad"'
# 
#TODO: Import macOS-only config
#if-shell 'test "$(uname -s)" = Darwin' 'source-file ~/.tmux-osx.conf'
#TODO: test for various tmux version
run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6-)"
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.4" | bc)" = 1 ]' \
  " bind-key -t vi-copy v begin-selection; \
  bind-key p paste-buffer; \
  bind-key -t vi-copy V select-line; \
  bind-key -t vi-copy r rectangle-toggle; "
#  bind -t vi-copy y copy-pipe 'xclip -in -selection clipboard'"
#
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' \
  "bind-key -T copy-mode-vi 'v' send -X begin-selection; \
  bind-key -T copy-mode-vi 'V' send -X select-line; \
  bind-key -T copy-mode-vi 'r' send -X rectangle-toggle;"

bind-key p paste-buffer
#
#TODO
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1
# Scrolling left to terminal
#set -g terminal-overrides 'xterm*:smcup@:rmcup@'
#
unbind-key Home
unbind-key End

#Last saved environment is automatically restored when tmux is started.
set -g @continuum-restore 'on'

